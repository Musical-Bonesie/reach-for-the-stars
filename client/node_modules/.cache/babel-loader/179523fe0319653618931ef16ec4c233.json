{"ast":null,"code":"import React$1, { memo, useCallback, useMemo, useRef } from 'react';\nimport { classNames, variationName } from '../../../../utilities/css.js';\nimport { useToggle as useToggle$1 } from '../../../../utilities/use-toggle.js';\nimport styles from '../../IndexTable.scss.js';\nimport { SelectionType } from '../../../../utilities/index-provider/types.js';\nimport { useIndexRow, useIndexSelectionChange } from '../../../../utilities/index-provider/hooks.js';\nimport { RowContext, RowHoveredContext } from '../../../../utilities/index-table/context.js';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Checkbox$1, null);\n\nvar Row = /*#__PURE__*/memo(function Row(_ref2) {\n  var children = _ref2.children,\n      selected = _ref2.selected,\n      id = _ref2.id,\n      position = _ref2.position,\n      subdued = _ref2.subdued,\n      status = _ref2.status,\n      onNavigation = _ref2.onNavigation;\n\n  var _useIndexRow = useIndexRow(),\n      selectMode = _useIndexRow.selectMode,\n      condensed = _useIndexRow.condensed;\n\n  var onSelectionChange = useIndexSelectionChange();\n\n  var _useToggle$ = useToggle$1(false),\n      hovered = _useToggle$.value,\n      setHoverIn = _useToggle$.setTrue,\n      setHoverOut = _useToggle$.setFalse;\n\n  var rowClassName = classNames(styles.TableRow, condensed && styles.condensedRow, selected && styles['TableRow-selected'], subdued && styles['TableRow-subdued'], hovered && styles['TableRow-hovered'], status && styles[variationName('status', status)]);\n  var handleInteraction = useCallback(function (event) {\n    event.stopPropagation();\n    if ('key' in event && event.key !== ' ' || !onSelectionChange) return;\n    var selectionType = event.nativeEvent.shiftKey ? SelectionType.Multi : SelectionType.Single;\n    onSelectionChange(selectionType, !selected, id, position);\n  }, [id, onSelectionChange, position, selected]);\n  var contextValue = useMemo(function () {\n    return {\n      itemId: id,\n      selected: selected,\n      onInteraction: handleInteraction\n    };\n  }, [id, selected, handleInteraction]);\n  var tableRowRef = useRef(null);\n  var isNavigating = useRef(false);\n\n  var handleRowClick = function handleRowClick(event) {\n    if (!tableRowRef.current || isNavigating.current) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    var primaryLinkElement = tableRowRef.current.querySelector('[data-primary-link]');\n\n    if (primaryLinkElement && !selectMode) {\n      isNavigating.current = true;\n      var _event$nativeEvent = event.nativeEvent,\n          ctrlKey = _event$nativeEvent.ctrlKey,\n          metaKey = _event$nativeEvent.metaKey;\n\n      if (onNavigation) {\n        onNavigation(id);\n      }\n\n      if ((ctrlKey || metaKey) && primaryLinkElement instanceof HTMLAnchorElement) {\n        isNavigating.current = false;\n        window.open(primaryLinkElement.href, '_blank');\n        return;\n      }\n\n      primaryLinkElement.dispatchEvent(new MouseEvent(event.type, event.nativeEvent));\n    } else {\n      isNavigating.current = false;\n      handleInteraction(event);\n    }\n  };\n\n  var RowWrapper = condensed ? 'li' : 'tr';\n  return /*#__PURE__*/React$1.createElement(RowContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React$1.createElement(RowHoveredContext.Provider, {\n    value: hovered\n  }, /*#__PURE__*/React$1.createElement(RowWrapper, {\n    key: id,\n    className: rowClassName,\n    onMouseEnter: setHoverIn,\n    onMouseLeave: setHoverOut,\n    onClick: handleRowClick,\n    ref: tableRowRef\n  }, _ref, children)));\n});\nexport { Row };","map":{"version":3,"sources":["/Users/Signe/Desktop/Shopify-NASA-Project/reach-for-the-stars/client/node_modules/@shopify/polaris/dist/esm/components/IndexTable/components/Row/Row.js"],"names":["React$1","memo","useCallback","useMemo","useRef","classNames","variationName","useToggle","useToggle$1","styles","SelectionType","useIndexRow","useIndexSelectionChange","RowContext","RowHoveredContext","Checkbox","Checkbox$1","_ref","createElement","Row","children","selected","id","position","subdued","status","onNavigation","selectMode","condensed","onSelectionChange","hovered","value","setHoverIn","setTrue","setHoverOut","setFalse","rowClassName","TableRow","condensedRow","handleInteraction","event","stopPropagation","key","selectionType","nativeEvent","shiftKey","Multi","Single","contextValue","itemId","onInteraction","tableRowRef","isNavigating","handleRowClick","current","preventDefault","primaryLinkElement","querySelector","ctrlKey","metaKey","HTMLAnchorElement","window","open","href","dispatchEvent","MouseEvent","type","RowWrapper","Provider","className","onMouseEnter","onMouseLeave","onClick","ref"],"mappings":"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","sourcesContent":["import React$1, { memo, useCallback, useMemo, useRef } from 'react';\nimport { classNames, variationName } from '../../../../utilities/css.js';\nimport { useToggle as useToggle$1 } from '../../../../utilities/use-toggle.js';\nimport styles from '../../IndexTable.scss.js';\nimport { SelectionType } from '../../../../utilities/index-provider/types.js';\nimport { useIndexRow, useIndexSelectionChange } from '../../../../utilities/index-provider/hooks.js';\nimport { RowContext, RowHoveredContext } from '../../../../utilities/index-table/context.js';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Checkbox$1, null);\n\nconst Row = /*#__PURE__*/memo(function Row({\n  children,\n  selected,\n  id,\n  position,\n  subdued,\n  status,\n  onNavigation\n}) {\n  const {\n    selectMode,\n    condensed\n  } = useIndexRow();\n  const onSelectionChange = useIndexSelectionChange();\n  const {\n    value: hovered,\n    setTrue: setHoverIn,\n    setFalse: setHoverOut\n  } = useToggle$1(false);\n  const rowClassName = classNames(styles.TableRow, condensed && styles.condensedRow, selected && styles['TableRow-selected'], subdued && styles['TableRow-subdued'], hovered && styles['TableRow-hovered'], status && styles[variationName('status', status)]);\n  const handleInteraction = useCallback(event => {\n    event.stopPropagation();\n    if ('key' in event && event.key !== ' ' || !onSelectionChange) return;\n    const selectionType = event.nativeEvent.shiftKey ? SelectionType.Multi : SelectionType.Single;\n    onSelectionChange(selectionType, !selected, id, position);\n  }, [id, onSelectionChange, position, selected]);\n  const contextValue = useMemo(() => ({\n    itemId: id,\n    selected,\n    onInteraction: handleInteraction\n  }), [id, selected, handleInteraction]);\n  const tableRowRef = useRef(null);\n  const isNavigating = useRef(false);\n\n  const handleRowClick = event => {\n    if (!tableRowRef.current || isNavigating.current) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    const primaryLinkElement = tableRowRef.current.querySelector('[data-primary-link]');\n\n    if (primaryLinkElement && !selectMode) {\n      isNavigating.current = true;\n      const {\n        ctrlKey,\n        metaKey\n      } = event.nativeEvent;\n\n      if (onNavigation) {\n        onNavigation(id);\n      }\n\n      if ((ctrlKey || metaKey) && primaryLinkElement instanceof HTMLAnchorElement) {\n        isNavigating.current = false;\n        window.open(primaryLinkElement.href, '_blank');\n        return;\n      }\n\n      primaryLinkElement.dispatchEvent(new MouseEvent(event.type, event.nativeEvent));\n    } else {\n      isNavigating.current = false;\n      handleInteraction(event);\n    }\n  };\n\n  const RowWrapper = condensed ? 'li' : 'tr';\n  return /*#__PURE__*/React$1.createElement(RowContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React$1.createElement(RowHoveredContext.Provider, {\n    value: hovered\n  }, /*#__PURE__*/React$1.createElement(RowWrapper, {\n    key: id,\n    className: rowClassName,\n    onMouseEnter: setHoverIn,\n    onMouseLeave: setHoverOut,\n    onClick: handleRowClick,\n    ref: tableRowRef\n  }, _ref, children)));\n});\n\nexport { Row };\n"]},"metadata":{},"sourceType":"module"}