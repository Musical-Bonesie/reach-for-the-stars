{"ast":null,"code":"import _classCallCheck from \"/Users/Signe/Desktop/Shopify-NASA-Project/reach-for-the-stars/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Signe/Desktop/Shopify-NASA-Project/reach-for-the-stars/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/Signe/Desktop/Shopify-NASA-Project/reach-for-the-stars/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/Signe/Desktop/Shopify-NASA-Project/reach-for-the-stars/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/Signe/Desktop/Shopify-NASA-Project/reach-for-the-stars/client/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React$1, { PureComponent } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { classNames } from '../../utilities/css.js';\nimport { clamp as clamp$1 } from '../../utilities/clamp.js';\nimport { hsbToRgb } from '../../utilities/color-transformers.js';\nimport styles from './ColorPicker.scss.js';\nimport { Slidable as Slidable$1 } from './components/Slidable/Slidable.js';\nimport { AlphaPicker as AlphaPicker$1 } from './components/AlphaPicker/AlphaPicker.js';\nimport { HuePicker as HuePicker$1 } from './components/HuePicker/HuePicker.js';\nvar RESIZE_DEBOUNCE_TIME_MS = 200;\n\nvar ColorPicker = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ColorPicker, _PureComponent);\n\n  var _super = _createSuper(ColorPicker);\n\n  function ColorPicker() {\n    var _this;\n\n    _classCallCheck(this, ColorPicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      pickerSize: {\n        width: 0,\n        height: 0\n      }\n    };\n    _this.colorNode = null;\n    _this.handleResize = debounce$1(function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          colorNode = _assertThisInitialize.colorNode;\n\n      if (colorNode == null) {\n        return;\n      }\n\n      _this.setState({\n        pickerSize: {\n          width: colorNode.clientWidth,\n          height: colorNode.clientHeight\n        }\n      });\n    }, RESIZE_DEBOUNCE_TIME_MS, {\n      leading: true,\n      trailing: true,\n      maxWait: RESIZE_DEBOUNCE_TIME_MS\n    });\n\n    _this.setColorNode = function (node) {\n      _this.colorNode = node;\n    };\n\n    _this.handleHueChange = function (hue) {\n      var _this$props = _this.props,\n          _this$props$color = _this$props.color,\n          brightness = _this$props$color.brightness,\n          saturation = _this$props$color.saturation,\n          _this$props$color$alp = _this$props$color.alpha,\n          alpha = _this$props$color$alp === void 0 ? 1 : _this$props$color$alp,\n          onChange = _this$props.onChange;\n      onChange({\n        hue: hue,\n        brightness: brightness,\n        saturation: saturation,\n        alpha: alpha\n      });\n    };\n\n    _this.handleAlphaChange = function (alpha) {\n      var _this$props2 = _this.props,\n          _this$props2$color = _this$props2.color,\n          hue = _this$props2$color.hue,\n          brightness = _this$props2$color.brightness,\n          saturation = _this$props2$color.saturation,\n          onChange = _this$props2.onChange;\n      onChange({\n        hue: hue,\n        brightness: brightness,\n        saturation: saturation,\n        alpha: alpha\n      });\n    };\n\n    _this.handleDraggerMove = function (_ref) {\n      var x = _ref.x,\n          y = _ref.y;\n      var pickerSize = _this.state.pickerSize;\n      var _this$props3 = _this.props,\n          _this$props3$color = _this$props3.color,\n          hue = _this$props3$color.hue,\n          _this$props3$color$al = _this$props3$color.alpha,\n          alpha = _this$props3$color$al === void 0 ? 1 : _this$props3$color$al,\n          onChange = _this$props3.onChange;\n      var saturation = clamp$1(x / pickerSize.width, 0, 1);\n      var brightness = clamp$1(1 - y / pickerSize.height, 0, 1);\n      onChange({\n        hue: hue,\n        saturation: saturation,\n        brightness: brightness,\n        alpha: alpha\n      });\n    };\n\n    _this.handlePickerDrag = function (event) {\n      // prevents external elements from being selected\n      event.preventDefault();\n    };\n\n    return _this;\n  }\n\n  _createClass(ColorPicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var colorNode = this.colorNode;\n\n      if (colorNode == null) {\n        return;\n      }\n\n      this.setState({\n        pickerSize: {\n          width: colorNode.clientWidth,\n          height: colorNode.clientHeight\n        }\n      });\n\n      if (process.env.NODE_ENV === 'development') {\n        setTimeout(function () {\n          _this2.setState({\n            pickerSize: {\n              width: colorNode.clientWidth,\n              height: colorNode.clientHeight\n            }\n          });\n        }, 0);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          id = _this$props4.id,\n          color = _this$props4.color,\n          allowAlpha = _this$props4.allowAlpha,\n          fullWidth = _this$props4.fullWidth;\n      var hue = color.hue,\n          saturation = color.saturation,\n          brightness = color.brightness,\n          providedAlpha = color.alpha;\n      var pickerSize = this.state.pickerSize;\n      var alpha = providedAlpha != null && allowAlpha ? providedAlpha : 1;\n\n      var _hsbToRgb = hsbToRgb({\n        hue: hue,\n        saturation: 1,\n        brightness: 1\n      }),\n          red = _hsbToRgb.red,\n          green = _hsbToRgb.green,\n          blue = _hsbToRgb.blue;\n\n      var colorString = \"rgba(\".concat(red, \", \").concat(green, \", \").concat(blue, \", \").concat(alpha, \")\");\n      var draggerX = clamp$1(saturation * pickerSize.width, 0, pickerSize.width);\n      var draggerY = clamp$1(pickerSize.height - brightness * pickerSize.height, 0, pickerSize.height);\n      var alphaSliderMarkup = allowAlpha ? /*#__PURE__*/React$1.createElement(AlphaPicker$1, {\n        alpha: alpha,\n        color: color,\n        onChange: this.handleAlphaChange\n      }) : null;\n      var className = classNames(styles.ColorPicker, fullWidth && styles.fullWidth);\n      return /*#__PURE__*/React$1.createElement(\"div\", {\n        className: className,\n        id: id,\n        onMouseDown: this.handlePickerDrag\n      }, /*#__PURE__*/React$1.createElement(\"div\", {\n        ref: this.setColorNode,\n        className: styles.MainColor\n      }, /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.ColorLayer,\n        style: {\n          backgroundColor: colorString\n        }\n      }), /*#__PURE__*/React$1.createElement(Slidable$1, {\n        onChange: this.handleDraggerMove,\n        draggerX: draggerX,\n        draggerY: draggerY\n      })), /*#__PURE__*/React$1.createElement(HuePicker$1, {\n        hue: hue,\n        onChange: this.handleHueChange\n      }), alphaSliderMarkup, /*#__PURE__*/React$1.createElement(EventListener$1, {\n        event: \"resize\",\n        handler: this.handleResize\n      }));\n    }\n  }]);\n\n  return ColorPicker;\n}(PureComponent);\n\nexport { ColorPicker };","map":{"version":3,"sources":["/Users/Signe/Desktop/Shopify-NASA-Project/reach-for-the-stars/client/node_modules/@shopify/polaris/dist/esm/components/ColorPicker/ColorPicker.js"],"names":["React$1","PureComponent","debounce$1","EventListener","EventListener$1","classNames","clamp","clamp$1","hsbToRgb","styles","Slidable","Slidable$1","AlphaPicker","AlphaPicker$1","HuePicker","HuePicker$1","RESIZE_DEBOUNCE_TIME_MS","ColorPicker","args","state","pickerSize","width","height","colorNode","handleResize","setState","clientWidth","clientHeight","leading","trailing","maxWait","setColorNode","node","handleHueChange","hue","props","color","brightness","saturation","alpha","onChange","handleAlphaChange","handleDraggerMove","x","y","handlePickerDrag","event","preventDefault","process","env","NODE_ENV","setTimeout","id","allowAlpha","fullWidth","providedAlpha","red","green","blue","colorString","draggerX","draggerY","alphaSliderMarkup","createElement","className","onMouseDown","ref","MainColor","ColorLayer","style","backgroundColor","handler"],"mappings":"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","sourcesContent":["import React$1, { PureComponent } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { classNames } from '../../utilities/css.js';\nimport { clamp as clamp$1 } from '../../utilities/clamp.js';\nimport { hsbToRgb } from '../../utilities/color-transformers.js';\nimport styles from './ColorPicker.scss.js';\nimport { Slidable as Slidable$1 } from './components/Slidable/Slidable.js';\nimport { AlphaPicker as AlphaPicker$1 } from './components/AlphaPicker/AlphaPicker.js';\nimport { HuePicker as HuePicker$1 } from './components/HuePicker/HuePicker.js';\n\nconst RESIZE_DEBOUNCE_TIME_MS = 200;\nclass ColorPicker extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pickerSize: {\n        width: 0,\n        height: 0\n      }\n    };\n    this.colorNode = null;\n    this.handleResize = debounce$1(() => {\n      const {\n        colorNode\n      } = this;\n\n      if (colorNode == null) {\n        return;\n      }\n\n      this.setState({\n        pickerSize: {\n          width: colorNode.clientWidth,\n          height: colorNode.clientHeight\n        }\n      });\n    }, RESIZE_DEBOUNCE_TIME_MS, {\n      leading: true,\n      trailing: true,\n      maxWait: RESIZE_DEBOUNCE_TIME_MS\n    });\n\n    this.setColorNode = node => {\n      this.colorNode = node;\n    };\n\n    this.handleHueChange = hue => {\n      const {\n        color: {\n          brightness,\n          saturation,\n          alpha = 1\n        },\n        onChange\n      } = this.props;\n      onChange({\n        hue,\n        brightness,\n        saturation,\n        alpha\n      });\n    };\n\n    this.handleAlphaChange = alpha => {\n      const {\n        color: {\n          hue,\n          brightness,\n          saturation\n        },\n        onChange\n      } = this.props;\n      onChange({\n        hue,\n        brightness,\n        saturation,\n        alpha\n      });\n    };\n\n    this.handleDraggerMove = ({\n      x,\n      y\n    }) => {\n      const {\n        pickerSize\n      } = this.state;\n      const {\n        color: {\n          hue,\n          alpha = 1\n        },\n        onChange\n      } = this.props;\n      const saturation = clamp$1(x / pickerSize.width, 0, 1);\n      const brightness = clamp$1(1 - y / pickerSize.height, 0, 1);\n      onChange({\n        hue,\n        saturation,\n        brightness,\n        alpha\n      });\n    };\n\n    this.handlePickerDrag = event => {\n      // prevents external elements from being selected\n      event.preventDefault();\n    };\n  }\n\n  componentDidMount() {\n    const {\n      colorNode\n    } = this;\n\n    if (colorNode == null) {\n      return;\n    }\n\n    this.setState({\n      pickerSize: {\n        width: colorNode.clientWidth,\n        height: colorNode.clientHeight\n      }\n    });\n\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.setState({\n          pickerSize: {\n            width: colorNode.clientWidth,\n            height: colorNode.clientHeight\n          }\n        });\n      }, 0);\n    }\n  }\n\n  render() {\n    const {\n      id,\n      color,\n      allowAlpha,\n      fullWidth\n    } = this.props;\n    const {\n      hue,\n      saturation,\n      brightness,\n      alpha: providedAlpha\n    } = color;\n    const {\n      pickerSize\n    } = this.state;\n    const alpha = providedAlpha != null && allowAlpha ? providedAlpha : 1;\n    const {\n      red,\n      green,\n      blue\n    } = hsbToRgb({\n      hue,\n      saturation: 1,\n      brightness: 1\n    });\n    const colorString = `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n    const draggerX = clamp$1(saturation * pickerSize.width, 0, pickerSize.width);\n    const draggerY = clamp$1(pickerSize.height - brightness * pickerSize.height, 0, pickerSize.height);\n    const alphaSliderMarkup = allowAlpha ? /*#__PURE__*/React$1.createElement(AlphaPicker$1, {\n      alpha: alpha,\n      color: color,\n      onChange: this.handleAlphaChange\n    }) : null;\n    const className = classNames(styles.ColorPicker, fullWidth && styles.fullWidth);\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: className,\n      id: id,\n      onMouseDown: this.handlePickerDrag\n    }, /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setColorNode,\n      className: styles.MainColor\n    }, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.ColorLayer,\n      style: {\n        backgroundColor: colorString\n      }\n    }), /*#__PURE__*/React$1.createElement(Slidable$1, {\n      onChange: this.handleDraggerMove,\n      draggerX: draggerX,\n      draggerY: draggerY\n    })), /*#__PURE__*/React$1.createElement(HuePicker$1, {\n      hue: hue,\n      onChange: this.handleHueChange\n    }), alphaSliderMarkup, /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"resize\",\n      handler: this.handleResize\n    }));\n  }\n\n}\n\nexport { ColorPicker };\n"]},"metadata":{},"sourceType":"module"}