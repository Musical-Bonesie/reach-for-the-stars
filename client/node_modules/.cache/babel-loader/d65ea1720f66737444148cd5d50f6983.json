{"ast":null,"code":"import { useRef, useCallback, useEffect } from 'react';\nimport { useIsomorphicLayoutEffect as useIsomorphicLayoutEffect$1 } from '../../utilities/use-isomorphic-layout-effect.js';\n\nfunction KeypressListener(_ref) {\n  var keyCode = _ref.keyCode,\n      handler = _ref.handler,\n      _ref$keyEvent = _ref.keyEvent,\n      keyEvent = _ref$keyEvent === void 0 ? 'keyup' : _ref$keyEvent;\n  var tracked = useRef({\n    handler: handler,\n    keyCode: keyCode\n  });\n  useIsomorphicLayoutEffect$1(function () {\n    tracked.current = {\n      handler: handler,\n      keyCode: keyCode\n    };\n  }, [handler, keyCode]);\n  var handleKeyEvent = useCallback(function (event) {\n    var _tracked$current = tracked.current,\n        handler = _tracked$current.handler,\n        keyCode = _tracked$current.keyCode;\n\n    if (event.keyCode === keyCode) {\n      handler(event);\n    }\n  }, []);\n  useEffect(function () {\n    document.addEventListener(keyEvent, handleKeyEvent);\n    return function () {\n      document.removeEventListener(keyEvent, handleKeyEvent);\n    };\n  }, [keyEvent, handleKeyEvent]);\n  return null;\n}\n\nexport { KeypressListener };","map":{"version":3,"sources":["/Users/Signe/Desktop/Shopify-NASA-Project/reach-for-the-stars/client/node_modules/@shopify/polaris/dist/esm/components/KeypressListener/KeypressListener.js"],"names":["useRef","useCallback","useEffect","useIsomorphicLayoutEffect","useIsomorphicLayoutEffect$1","KeypressListener","keyCode","handler","keyEvent","tracked","current","handleKeyEvent","event","document","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,yBAAyB,IAAIC,2BAAtC,QAAyE,iDAAzE;;AAEA,SAASC,gBAAT,OAIG;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,2BADDC,QACC;AAAA,MADDA,QACC,8BADU,OACV;AACD,MAAMC,OAAO,GAAGT,MAAM,CAAC;AACrBO,IAAAA,OAAO,EAAPA,OADqB;AAErBD,IAAAA,OAAO,EAAPA;AAFqB,GAAD,CAAtB;AAIAF,EAAAA,2BAA2B,CAAC,YAAM;AAChCK,IAAAA,OAAO,CAACC,OAAR,GAAkB;AAChBH,MAAAA,OAAO,EAAPA,OADgB;AAEhBD,MAAAA,OAAO,EAAPA;AAFgB,KAAlB;AAID,GAL0B,EAKxB,CAACC,OAAD,EAAUD,OAAV,CALwB,CAA3B;AAMA,MAAMK,cAAc,GAAGV,WAAW,CAAC,UAAAW,KAAK,EAAI;AAC1C,2BAGIH,OAAO,CAACC,OAHZ;AAAA,QACEH,OADF,oBACEA,OADF;AAAA,QAEED,OAFF,oBAEEA,OAFF;;AAKA,QAAIM,KAAK,CAACN,OAAN,KAAkBA,OAAtB,EAA+B;AAC7BC,MAAAA,OAAO,CAACK,KAAD,CAAP;AACD;AACF,GATiC,EAS/B,EAT+B,CAAlC;AAUAV,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ,CAACC,gBAAT,CAA0BN,QAA1B,EAAoCG,cAApC;AACA,WAAO,YAAM;AACXE,MAAAA,QAAQ,CAACE,mBAAT,CAA6BP,QAA7B,EAAuCG,cAAvC;AACD,KAFD;AAGD,GALQ,EAKN,CAACH,QAAD,EAAWG,cAAX,CALM,CAAT;AAMA,SAAO,IAAP;AACD;;AAED,SAASN,gBAAT","sourcesContent":["import { useRef, useCallback, useEffect } from 'react';\nimport { useIsomorphicLayoutEffect as useIsomorphicLayoutEffect$1 } from '../../utilities/use-isomorphic-layout-effect.js';\n\nfunction KeypressListener({\n  keyCode,\n  handler,\n  keyEvent = 'keyup'\n}) {\n  const tracked = useRef({\n    handler,\n    keyCode\n  });\n  useIsomorphicLayoutEffect$1(() => {\n    tracked.current = {\n      handler,\n      keyCode\n    };\n  }, [handler, keyCode]);\n  const handleKeyEvent = useCallback(event => {\n    const {\n      handler,\n      keyCode\n    } = tracked.current;\n\n    if (event.keyCode === keyCode) {\n      handler(event);\n    }\n  }, []);\n  useEffect(() => {\n    document.addEventListener(keyEvent, handleKeyEvent);\n    return () => {\n      document.removeEventListener(keyEvent, handleKeyEvent);\n    };\n  }, [keyEvent, handleKeyEvent]);\n  return null;\n}\n\nexport { KeypressListener };\n"]},"metadata":{},"sourceType":"module"}